#!/usr/bin/env bash

[ -z "$GO" ] && GO=go
[ -z "$LINT_PATH" ] && LINT_PATH="."

# detecting GOPATH and removing trailing "/" if any
GOPATH="$(go env GOPATH)"
GOPATH=${GOPATH%/}

# adding GOBIN to PATH
[[ ":$PATH:" != *"$GOPATH/bin"* ]] && PATH=$PATH:"$GOPATH"/bin

echo "Fixing imports and fmt..."

# Using the match generated code rules defined in https://golang.org/s/generatedcode
# to exclude files that were autogenerated.
SOURCES_TO_LINT=$(find "$LINT_PATH" -name '*.go' -not -path "./vendor/*" -exec grep -L '^// Code generated .* DO NOT EDIT\.$' {} \;)

# gh_repo is the variable available in gh-repo.sh that contains the long repo name. Example: github.com/ConsenSys/platform-data-pipeline
BASEDIR=$(dirname "$0")
source "$BASEDIR"/gh-repo.sh

gci write -s Standard -s default -s "Prefix($gh_repo)" ${SOURCES_TO_LINT}

# simplify code
gofumpt -w ${SOURCES_TO_LINT}